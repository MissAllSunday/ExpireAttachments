<?xml version="1.0"?>
<!DOCTYPE modification SYSTEM "http://www.simplemachines.org/xml/modification">

<modification xmlns="http://www.simplemachines.org/xml/modification" xmlns:smf="http://www.simplemachines.org/">
	<id>Suki:ExpireAttachments</id>
	<version>1.0</version>

	<file name="$sourcedir/Display.php">
		<operation>
			<search position="replace"><![CDATA[a.id_attach, a.id_folder, a.id_msg, a.filename, a.file_hash, IFNULL(a.size, 0) AS filesize, a.downloads, a.approved,]]></search>
			<add><![CDATA[a.id_attach, a.id_folder, a.id_msg, a.filename, a.file_hash, IFNULL(a.size, 0) AS filesize, a.downloads, a.approved, a.expire_date,]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA['is_approved' => $attachment['approved'],]]></search>
			<add><![CDATA['is_approved' => $attachment['approved'],
				'expire_date' => (!empty($attachment['expire_date']) ? $txt['ExAt_ui_showDate'] . expire_attachments_timeElapsed($attachment['expire_date']) : ''),]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[// How much are we sticking on each page?]]></search>
			<add><![CDATA[// Expire Attachments mod
	loadLanguage('ExpireAttachments');
	require_once($sourcedir .'/ExpireAttachments.php');
	// Expire Attachments mod

	// How much are we sticking on each page?]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Post.php">
		<operation>
			<search position="replace"><![CDATA[// Check if they are trying to delete any current attachments....]]></search>
			<add><![CDATA[// Expire Attachments mod
	if (!empty($modSettings['ExAt_setting_enable']) && isset($_POST['attach_del']))
	{
		require_once($sourcedir .'/ExpireAttachments.php');
		$to_edit_expire = array();
		foreach ($_POST['attach_del'] as $file => $expireID)
			if (isset($_POST['attachment_expire'][$file - 1]) && !empty($_POST['attachment_expire'][$file - 1]))
					editAttachmentDate($expireID, $_POST['attachment_expire'][$file - 1]);
	}
	// Expire Attachments mod end

	// Check if they are trying to delete any current attachments....]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[SELECT IFNULL(size, -1) AS filesize, filename, id_attach, approved]]></search>
			<add><![CDATA[SELECT IFNULL(size, -1) AS filesize, filename, id_attach, approved, expire_date]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$context['current_attachments'][] = array(
						'name' => htmlspecialchars($row['filename']),
						'id' => $row['id_attach'],
						'approved' => $row['approved'],
					);]]></search>
			<add><![CDATA[$context['current_attachments'][] = array(
						'name' => htmlspecialchars($row['filename']),
						'id' => $row['id_attach'],
						'approved' => $row['approved'],
						'expire_date' => $row['expire_date'],
					);]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$context['can_post_attachment_unapproved'] = allowedTo('post_attachment');]]></search>
			<add><![CDATA[$context['can_post_attachment_unapproved'] = allowedTo('post_attachment');

	// Expire Attachments mod
	$context['ExAt_list'] = '';
	loadLanguage('ExpireAttachments');
	$context['ExAt_availableOptions'] = array();
	$context['ExAt_periods'] = array('Day', 'Week', 'Month', 'Year');

	if (!empty($modSettings['ExAt_setting_enable']))
	{
		$context['ExAt_list'] .= '<select name="expire_date0" id="expire_date1">';


		// Add each option if the user has the permission to use it
		foreach  ($context['ExAt_periods'] as $period)
			if (!empty($modSettings['ExAt_setting_enable'. $period .'_period']))
			{
				$context['ExAt_availableOptions'][] = $period;
				if (allowedTo('ExAt_'. $period))
					$context['ExAt_list'] .= '<option value="'. $period .'">'. $modSettings['ExAt_setting_periods'. $period .'_number'] .' '. $period . ($modSettings['ExAt_setting_periods'. $period .'_number'] > 1 ? $txt['ExAt_setting_s'] : '') .'</option>';
			}

		// Special case for the "forever" option
		if (!empty($modSettings['ExAt_setting_enableForever_period']))
			if (allowedTo('ExAt_Forever'))
				$context['ExAt_list'] .= '<option value="forever">'. $txt['ExAt_setting_forever'] .'</option>';

		// Close the list
		$context['ExAt_list'] .= '</select>';
	}
	// Expire Attachments mod end]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[if (createAttachment($attachmentOptions))]]></search>
			<add><![CDATA[// Expire Attachments mod
			$attachmentOptions['expire_date'] = 0;

			if (!empty($modSettings['ExAt_setting_enable']) && !empty($_REQUEST['expire_date'. $n]) && isset($modSettings['ExAt_setting_periods'. $_REQUEST['expire_date'. $n].'_number']) && allowedTo('ExAt_'. $_REQUEST['expire_date'. $n]))
			{
				// Do this only if the selected option wasn't "forever"
				if ($_REQUEST['expire_date'. $n] != 'forever')
				{
					// One last extra check, just to be sure...
					if (empty($modSettings['ExAt_setting_periods'. $_REQUEST['expire_date'. $n] .'_number']))
						$modSettings['ExAt_setting_periods'. $_REQUEST['expire_date'. $n] .'_number'] = 1;

					// Calculate the time ahead, strtotime() makes things easy, for me, not the server...
					$expire_date = strtotime('+'. $modSettings['ExAt_setting_periods'. $_REQUEST['expire_date'. $n] .'_number'] .' '. strtolower($_REQUEST['expire_date'. $n]));

					// Fill up the var
					if (!empty($expire_date))
						$attachmentOptions['expire_date'] = (int) $expire_date;
				}
			}
			// Expire Attachments mod end

			if (createAttachment($attachmentOptions))]]></add>
		</operation>
	</file>

	<file name="$sourcedir/Subs-Post.php">
		<operation>
			<search position="replace"><![CDATA[$smcFunc['db_insert']('',
		'{db_prefix}attachments',
		array(
			'id_folder' => 'int', 'id_msg' => 'int', 'filename' => 'string-255', 'file_hash' => 'string-40', 'fileext' => 'string-8',
			'size' => 'int', 'width' => 'int', 'height' => 'int',
			'mime_type' => 'string-20', 'approved' => 'int',
		),
		array(
			$id_folder, (int) $attachmentOptions['post'], $attachmentOptions['name'], $attachmentOptions['file_hash'], $attachmentOptions['fileext'],
			(int) $attachmentOptions['size'], (empty($attachmentOptions['width']) ? 0 : (int) $attachmentOptions['width']), (empty($attachmentOptions['height']) ? '0' : (int) $attachmentOptions['height']),
			(!empty($attachmentOptions['mime_type']) ? $attachmentOptions['mime_type'] : ''), (int) $attachmentOptions['approved'],
		),
		array('id_attach')
	);]]></search>
			<add><![CDATA[$smcFunc['db_insert']('',
		'{db_prefix}attachments',
		array(
			'id_folder' => 'int', 'id_msg' => 'int', 'filename' => 'string-255', 'file_hash' => 'string-40', 'fileext' => 'string-8',
			'size' => 'int', 'width' => 'int', 'height' => 'int',
			'mime_type' => 'string-20', 'approved' => 'int', 'expire_date' => 'int',
		),
		array(
			$id_folder, (int) $attachmentOptions['post'], $attachmentOptions['name'], $attachmentOptions['file_hash'], $attachmentOptions['fileext'],
			(int) $attachmentOptions['size'], (empty($attachmentOptions['width']) ? 0 : (int) $attachmentOptions['width']), (empty($attachmentOptions['height']) ? '0' : (int) $attachmentOptions['height']),
			(!empty($attachmentOptions['mime_type']) ? $attachmentOptions['mime_type'] : ''), (int) $attachmentOptions['approved'], (int) $attachmentOptions['expire_date'],
		),
		array('id_attach')
	);]]></add>
		</operation>
	</file>

	<file name="$themedir/Post.template.php">
		<operation>
			<search position="replace"><![CDATA[foreach ($context['current_attachments'] as $attachment)
			echo '
						<dd class="smalltext">
							<label for="attachment_', $attachment['id'], '"><input type="checkbox" id="attachment_', $attachment['id'], '" name="attach_del[]" value="', $attachment['id'], '"', empty($attachment['unchecked']) ? ' checked="checked"' : '', ' class="input_check" /> ', $attachment['name'], (empty($attachment['approved']) ? ' (' . $txt['awaiting_approval'] . ')' : ''), '</label>
						</dd>';]]></search>
			<add><![CDATA[foreach ($context['current_attachments'] as $attachment)
		{
			echo '
						<dd class="smalltext">
							<label for="attachment_', $attachment['id'], '"><input type="checkbox" id="attachment_', $attachment['id'], '" name="attach_del[]" value="', $attachment['id'], '"', empty($attachment['unchecked']) ? ' checked="checked"' : '', ' class="input_check" /> ', $attachment['name'], (empty($attachment['approved']) ? ' (' . $txt['awaiting_approval'] . ')' : ''), '</label>';

			// Expire Attachments mod
			if (!empty($modSettings['ExAt_setting_enable']))
			{
				echo ' |', $txt['ExAt_ui_title']. ' <select name="attachment_expire[]"><option value="">&nbsp;</option>';

				// Set the hardcoded periods
				$context['ExAt_periods'] = array('Day', 'Week', 'Month', 'Year');
				$context['ExAt_availableOptions'] = array();

				// Add each option if the user has the permission to use it
				foreach  ($context['ExAt_periods'] as $period)
					if (!empty($modSettings['ExAt_setting_enable'. $period .'_period']))
					{
						$context['ExAt_availableOptions'][] = $period;
						if (allowedTo('ExAt_'. $period))
							echo '<option value="'. $period .'">'. $modSettings['ExAt_setting_periods'. $period .'_number'] .' '. $period . ($modSettings['ExAt_setting_periods'. $period .'_number'] > 1 ? $txt['ExAt_setting_s'] : '') .'</option>';
					}

				// Special case for the "forever" option
				if (!empty($modSettings['ExAt_setting_enableForever_period']))
					if (allowedTo('ExAt_Forever'))
						echo '<option value="forever">'. $txt['ExAt_setting_forever'] .'</option>';

				// Close the list
				echo '</select>';
			}

			echo '
						</dd>';
		}
		// Expire Attachments mod end]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[// Show more boxes only if they aren't approaching their limit.]]></search>
			<add><![CDATA[// Expire Attachments mod
		if (!empty($modSettings['ExAt_setting_enable']))
			echo $txt['ExAt_ui_title'] . $context['ExAt_list'];
		// Expire Attachments mod end

		// Show more boxes only if they aren't approaching their limit.]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[function addAttachment()
								{
									allowed_attachments = allowed_attachments - 1;
									current_attachment = current_attachment + 1;
									if (allowed_attachments <= 0)
										return alert("', $txt['more_attachments_error'], '");

									setOuterHTML(document.getElementById("moreAttachments"), \'<dd class="smalltext"><input type="file" size="60" name="attachment[]" id="attachment\' + current_attachment + \'" class="input_file" /> (<a href="javascript:void(0);" onclick="cleanFileInput(\\\'attachment\' + current_attachment + \'\\\');">', $txt['clean_attach'], '</a>)\' + \'</dd><dd class="smalltext" id="moreAttachments"><a href="#" onclick="addAttachment(); return false;">(', $txt['more_attachments'], ')<\' + \'/a><\' + \'/dd>\');

									return true;
								}]]></search>
			<add><![CDATA[function addAttachment()
								{
									allowed_attachments = allowed_attachments - 1;
									current_attachment = current_attachment + 1;
									var current_Select = current_attachment - 1;
									if (allowed_attachments <= 0)
										return alert("', $txt['more_attachments_error'], '");

									setOuterHTML(document.getElementById("moreAttachments"), \'<dd class="smalltext"><input type="file" size="60" name="attachment[]" id="attachment\' + current_attachment + \'" class="input_file" /> (<a href="javascript:void(0);" onclick="cleanFileInput(\\\'attachment\' + current_attachment + \'\\\');">', $txt['clean_attach'], '</a>)';

			// Expire Attachments mod
			echo '\' + \'', $txt['ExAt_ui_title'] ,'<select name="expire_date\' + current_Select + \'" id="expire_date\' + current_attachment + \'">';

			foreach ($context['ExAt_availableOptions'] as $period)
				echo '\' + \'<option value="', $period ,'">', $modSettings['ExAt_setting_periods'. $period .'_number'] ,' ', $period , ($modSettings['ExAt_setting_periods'. $period .'_number'] > 1 ? $txt['ExAt_setting_s'] : '') ,'</option>';

			// Special case for the "forever" option
			if (!empty($modSettings['ExAt_setting_enableForever_period']))
				if (allowedTo('ExAt_Forever'))
					echo '\' + \'<option value="forever">', $txt['ExAt_setting_forever_js'] ,'</option>';

			echo '\' + \'</select>';
			// Expire Attachments mod end

			echo'\' + \'</dd><dd class="smalltext" id="moreAttachments"><a href="#" onclick="addAttachment(); return false;">(', $txt['more_attachments'], ')<\' + \'/a><\' + \'/dd>\');

									return true;
								}]]></add>
		</operation>
	</file>

	<file name="$themedir/Display.template.php">
		<operation>
			<search position="replace"><![CDATA[(', $attachment['size'], ($attachment['is_image'] ? ', ' . $attachment['real_width'] . 'x' . $attachment['real_height'] . ' - ' . $txt['attach_viewed'] : ' - ' . $txt['attach_downloaded']) . ' ' . $attachment['downloads'] . ' ' . $txt['attach_times'] . '.)<br />';]]></search>
			<add><![CDATA[(', $attachment['size'], ($attachment['is_image'] ? ', ' . $attachment['real_width'] . 'x' . $attachment['real_height'] . ' - ' . $txt['attach_viewed'] : ' - ' . $txt['attach_downloaded']) . ' ' . $attachment['downloads'] . ' ' . $txt['attach_times'] . '.)';

				// Expire Attachments mod
				if (!empty($modSettings['ExAt_setting_enable']) && !empty($attachment['expire_date']))
					echo '
										', $attachment['expire_date'];

				echo '
										<br />';
				// Expire Attachments mod]]></add>
		</operation>
	</file>

	<file name="$sourcedir/ScheduledTasks.php">
		<operation>
			<search position="end" />
			<add><![CDATA[// Deletes attachments based on its expire dates
function scheduled_attachments_expire_date()
{
	global $modSettings, $smcFunc, $sourcedir, $txt;

	// The mod must be enable
	if (empty($modSettings['ExAt_setting_enable']))
		return true;

	loadLanguage('ExpireAttachments');

	$remove_ids = array();
	$file_names = array();

	// Since we're way beyond abusing strtotime()...
	$range_to = time() - (12*60*60);
	$range_from = time() + (12*60*60);

	// Did someone ordered a heavy query?
	$request = $smcFunc['db_query']('', '
		SELECT id_attach, filename, id_msg
		FROM {db_prefix}attachments
		WHERE expire_date BETWEEN {int:range_to} AND {int:range_from}
			AND attachment_type = 0',
		array(
			'range_to' => $range_to,
			'range_from' => $range_from,
		)
	);

	// Get the Ids
	while ($row = $smcFunc['db_fetch_assoc']($request))
	{
		$remove_ids[] = $row['id_attach'];
		$file_names[$row['id_msg']][$row['id_attach']] = $row['filename'];
	}

	$smcFunc['db_free_result']($request);

	// Nada... better luck next time!
	if (empty($remove_ids))
		return true;

	// Got some, yay!
	require_once($sourcedir . '/ManageAttachments.php');

	if (!empty($file_names))
	{
		// Build the array
		$attachmentQuery = array(
			'attachment_type' => 0,
			'id_attach' => $remove_ids,
		);

		// Delete the actual attachments
		removeAttachments($attachmentQuery, 'messages', false, true);

		foreach ($file_names as $message => $file)
			foreach ($file as $id => $name)
				$smcFunc['db_query']('', '
					UPDATE {db_prefix}messages
					SET body = CONCAT(body, {string:notice})
					WHERE id_msg = {int:m}',
					array(
						'm' => $message,
						'notice' => '<br />' . (!empty($name) ? sprintf($txt['EXAT_ui_legend_custom'], $name) : $txt['EXAT_ui_legend']),
					)
				);
	}

	return true;
}
]]></add>
		</operation>
	</file>

</modification>
